{"version":3,"sources":["../src/timesum.js"],"names":["performance","require","running","Map","data","indent","console","timeSum","_timeSum","name","callback","has","warn","now","set","repeat","timeSumEnd","_timeEndSum","recordAs","endTime","indentedName","indentedRecordAs","start","get","undefined","delete","add","timeSumGroup","_timeSumGroup","timeSumGroupEnd","_timeSumGroupEnd","timeSumCancel","_timeSumCancel","timeSumPrint","_timeSumPrint","group","maxs","maxc","forEach","sum","count","whole","Math","floor","toString","max","length","String","arr","isTimer","rest","slice","push","padStart","padEnd","log","reverse","join","groupEnd","timeSumReset","_timeSumClear","timeSumCount","_timeSumCount","delta","obj"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,YAAD,CAA/B;;AAEA,IAAIC,OAAO,GAAG,IAAIC,GAAJ,EAAd;AACA,IAAIC,IAAI,GAAG,IAAID,GAAJ,EAAX;AACA,IAAIE,MAAM,GAAG,CAAb;;AAEAC,OAAO,CAACC,OAAR,GAAkB,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;AAClD,MAAIR,OAAO,CAACS,GAAR,CAAYF,IAAZ,CAAJ,EAAuB;AACrB,WAAOH,OAAO,CAACM,IAAR,CAAa,+CAAb,EAA8DH,IAA9D,CAAP;AACD;;AAED,QAAMI,GAAG,GAAGb,WAAW,CAACa,GAAZ,EAAZ;AACAX,EAAAA,OAAO,CAACY,GAAR,CAAY,IAAIC,MAAJ,CAAWV,MAAX,IAAqBI,IAAjC,EAAuCI,GAAvC,EAA4C,IAA5C;;AAEA,MAAIH,QAAJ,EAAc;AACZ,QAAI;AACFA,MAAAA,QAAQ;AACT,KAFD,SAEU;AACRJ,MAAAA,OAAO,CAACU,UAAR,CAAmB,IAAID,MAAJ,CAAWV,MAAX,IAAqBI,IAAxC;AACD;AACF;AACF,CAfD;;AAiBAH,OAAO,CAACU,UAAR,GAAqB,SAASC,WAAT,CAAqBR,IAArB,EAA2BS,QAAQ,GAAGT,IAAtC,EAA4C;AAC/D,QAAMU,OAAO,GAAGnB,WAAW,CAACa,GAAZ,EAAhB;AACA,QAAMO,YAAY,GAAG,IAAIL,MAAJ,CAAWV,MAAX,IAAqBI,IAA1C;AACA,QAAMY,gBAAgB,GAAG,IAAIN,MAAJ,CAAWV,MAAX,IAAqBa,QAA9C;AACA,QAAMI,KAAK,GAAGpB,OAAO,CAACqB,GAAR,CAAYH,YAAZ,CAAd;;AACA,MAAIE,KAAK,KAAKE,SAAd,EAAyB;AACvB,WAAOlB,OAAO,CAACM,IAAR,CAAa,8CAAb,EAA6DH,IAA7D,CAAP;AACD;;AACDP,EAAAA,OAAO,CAACuB,MAAR,CAAeL,YAAf;AAEAM,EAAAA,GAAG,CAACL,gBAAD,EAAmBF,OAAO,GAAGG,KAA7B,EAAoC,IAApC,CAAH;AACD,CAXD;;AAaAhB,OAAO,CAACqB,YAAR,GAAuB,SAASC,aAAT,CAAuBnB,IAAvB,EAA6BC,QAA7B,EAAuC;AAC5DF,EAAAA,QAAQ,CAACC,IAAD,EAAOC,QAAP,CAAR;;AACAL,EAAAA,MAAM,IAAI,CAAV;AACD,CAHD;;AAKAC,OAAO,CAACuB,eAAR,GAA0B,SAASC,gBAAT,CAA0BrB,IAA1B,EAAgCS,QAAQ,GAAGT,IAA3C,EAAiD;AACzEJ,EAAAA,MAAM,IAAI,CAAV;;AACAY,EAAAA,WAAW,CAACR,IAAD,EAAOS,QAAP,CAAX;AACD,CAHD;;AAKAZ,OAAO,CAACyB,aAAR,GAAwB,SAASC,cAAT,CAAwBvB,IAAxB,EAA8B;AACpD;AACAP,EAAAA,OAAO,CAACuB,MAAR,CAAehB,IAAf;AACD,CAHD;;AAKAH,OAAO,CAAC2B,YAAR,GAAuB,SAASC,aAAT,GAAyB;AAC9C;AACA5B,EAAAA,OAAO,CAAC6B,KAAR,CAAc,iBAAd;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;AACAjC,EAAAA,IAAI,CAACkC,OAAL,CAAa,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,EAAiB/B,IAAjB,KAA0B;AACrC,UAAMgC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,EAAgBK,QAAhB,EAAd;AACAR,IAAAA,IAAI,GAAGM,IAAI,CAACG,GAAL,CAAST,IAAT,EAAeK,KAAK,CAACK,MAArB,CAAP;AACAT,IAAAA,IAAI,GAAGK,IAAI,CAACG,GAAL,CAASR,IAAT,EAAeU,MAAM,CAACP,KAAD,CAAN,CAAcM,MAA7B,CAAP;AACD,GAJD;AAKA,QAAME,GAAG,GAAG,EAAZ;AACA5C,EAAAA,IAAI,CAACkC,OAAL,CAAa,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcS,IAAAA;AAAd,GAAD,EAA0BxC,IAA1B,KAAmC;AAC9C,UAAMgC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,EAAgBK,QAAhB,EAAd;AACA,UAAMM,IAAI,GAAGH,MAAM,CAACR,GAAG,GAAG,CAAP,CAAN,CAAgBY,KAAhB,CAAsB,CAAtB,CAAb,CAF8C,CAER;;AACtCH,IAAAA,GAAG,CAACI,IAAJ,CACE,QACGH,OAAO,GACJR,KAAK,CAACY,QAAN,CAAejB,IAAf,EAAqB,GAArB,IAA4Bc,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,CAAd,EAAiBG,MAAjB,CAAwB,CAAxB,EAA2B,GAA3B,CAA5B,GAA8D,IAD1D,GAEJ,CAACb,KAAK,CAACY,QAAN,CAAejB,IAAf,EAAqB,GAArB,KAA6BG,GAAG,KAAKC,KAAR,GAAgBU,IAAI,GAAG,IAAvB,GAA8BA,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAe,GAAf,CAA3D,CAAD,EAAkFA,MAAlF,CACElB,IAAI,GAAG,CADT,EAEE,GAFF,CAHN,KAOGa,OAAO,IAAIT,KAAK,KAAKD,GAArB,GACG,OAAOC,KAAK,CAACI,QAAN,GAAiBS,QAAjB,CAA0BhB,IAAI,GAAG,CAAjC,EAAoC,GAApC,CAAP,GAAkD,KADrD,GAEG,IAAItB,MAAJ,CAAWsB,IAAI,GAAG,CAAlB,CATN,IAUE,IAVF,GAWE5B,IAZJ;AAcD,GAjBD;AAkBAH,EAAAA,OAAO,CAACiD,GAAR,CAAYP,GAAG,CAACQ,OAAJ,GAAcC,IAAd,CAAmB,IAAnB,CAAZ;AACAnD,EAAAA,OAAO,CAACoD,QAAR;AACD,CA/BD;;AAiCApD,OAAO,CAACqD,YAAR,GAAuB,SAASC,aAAT,GAAyB;AAC9CxD,EAAAA,IAAI,GAAG,IAAID,GAAJ,EAAP;AACAD,EAAAA,OAAO,GAAG,IAAIC,GAAJ,EAAV;AACAE,EAAAA,MAAM,GAAG,CAAT;AACD,CAJD;;AAMAC,OAAO,CAACuD,YAAR,GAAuB,SAASC,aAAT,CAAuBrD,IAAvB,EAA6BsD,KAAK,GAAG,CAArC,EAAwC;AAC7DrC,EAAAA,GAAG,CAACjB,IAAD,EAAOsD,KAAP,EAAc,KAAd,CAAH;AACD,CAFD;;AAIA,SAASrC,GAAT,CAAajB,IAAb,EAAmBsD,KAAnB,EAA0Bd,OAA1B,EAAmC;AACjC,MAAIe,GAAG,GAAG5D,IAAI,CAACmB,GAAL,CAASd,IAAT,CAAV;;AACA,MAAIuD,GAAG,KAAKxC,SAAZ,EAAuB;AACrBwC,IAAAA,GAAG,GAAG;AAAEzB,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,CAAjB;AAAoBS,MAAAA;AAApB,KAAN;AACA7C,IAAAA,IAAI,CAACU,GAAL,CAASL,IAAT,EAAeuD,GAAf;AACD;;AACDA,EAAAA,GAAG,CAACzB,GAAJ,IAAWwB,KAAX;AACAC,EAAAA,GAAG,CAACf,OAAJ,GAAcA,OAAd;AACA,IAAEe,GAAG,CAACxB,KAAN;AACD","sourcesContent":["const { performance } = require(\"perf_hooks\")\n\nlet running = new Map()\nlet data = new Map()\nlet indent = 0\n\nconsole.timeSum = function _timeSum(name, callback) {\n  if (running.has(name)) {\n    return console.warn(\"console.timeSum: name already being recorded:\", name)\n  }\n\n  const now = performance.now()\n  running.set(\" \".repeat(indent) + name, now, true)\n\n  if (callback) {\n    try {\n      callback()\n    } finally {\n      console.timeSumEnd(\" \".repeat(indent) + name)\n    }\n  }\n}\n\nconsole.timeSumEnd = function _timeEndSum(name, recordAs = name) {\n  const endTime = performance.now()\n  const indentedName = \" \".repeat(indent) + name\n  const indentedRecordAs = \" \".repeat(indent) + recordAs\n  const start = running.get(indentedName)\n  if (start === undefined) {\n    return console.warn(\"console.timeEndSum: name not being recorded:\", name)\n  }\n  running.delete(indentedName)\n\n  add(indentedRecordAs, endTime - start, true)\n}\n\nconsole.timeSumGroup = function _timeSumGroup(name, callback) {\n  _timeSum(name, callback)\n  indent += 2\n}\n\nconsole.timeSumGroupEnd = function _timeSumGroupEnd(name, recordAs = name) {\n  indent -= 2\n  _timeEndSum(name, recordAs)\n}\n\nconsole.timeSumCancel = function _timeSumCancel(name) {\n  // Should this warn if the name does not exist..?\n  running.delete(name)\n}\n\nconsole.timeSumPrint = function _timeSumPrint() {\n  // console.log(data)\n  console.group(\"timeSum report;\")\n  let maxs = 0\n  let maxc = 0\n  data.forEach(({ sum, count }, name) => {\n    const whole = Math.floor(sum).toString()\n    maxs = Math.max(maxs, whole.length)\n    maxc = Math.max(maxc, String(count).length)\n  })\n  const arr = []\n  data.forEach(({ sum, count, isTimer }, name) => {\n    const whole = Math.floor(sum).toString()\n    const rest = String(sum % 1).slice(1) // Either zero or `0.` plus fraction\n    arr.push(\n      \"- \" +\n        (isTimer\n          ? whole.padStart(maxs, \" \") + rest.slice(0, 3).padEnd(3, \" \") + \"ms\"\n          : (whole.padStart(maxs, \" \") + (sum === count ? rest + ' x' : rest.padEnd(3, \" \"))).padEnd(\n              maxs + 5,\n              \" \"\n            )) +\n        (isTimer || count !== sum\n          ? \" (\" + count.toString().padStart(maxc + 1, \" \") + \"x )\"\n          : \" \".repeat(maxc + 6)) +\n        \": \" +\n        name\n    )\n  })\n  console.log(arr.reverse().join(\"\\n\"))\n  console.groupEnd()\n}\n\nconsole.timeSumReset = function _timeSumClear() {\n  data = new Map()\n  running = new Map()\n  indent = 0\n}\n\nconsole.timeSumCount = function _timeSumCount(name, delta = 1) {\n  add(name, delta, false)\n}\n\nfunction add(name, delta, isTimer) {\n  let obj = data.get(name)\n  if (obj === undefined) {\n    obj = { sum: 0, count: 0, isTimer }\n    data.set(name, obj)\n  }\n  obj.sum += delta\n  obj.isTimer = isTimer\n  ++obj.count\n}\n"],"file":"timesum.js"}